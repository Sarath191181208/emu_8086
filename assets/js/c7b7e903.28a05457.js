"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9354],{380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var i=n(7462),a=(n(7294),n(3905)),r=n(7898);const o={authors:{name:"Vangipuram Srinivasa Sarath Chandra",title:"Tech enthusiast",url:"https://github.com/Sarath191181208",image_url:"https://avatars.githubusercontent.com/u/74459981?v=4"}},s="Support for execution of OR ins",u={permalink:"/emu_8086/blog/2023/11/2/",editUrl:"https://github.com/Sarath191181208/emu_8086/tree/main/docusaurus/blog/2023-11-2.mdx",source:"@site/blog/2023-11-2.mdx",title:"Support for execution of OR ins",description:"Execution of OR instructions",date:"2023-11-02T00:00:00.000Z",formattedDate:"November 2, 2023",tags:[],readingTime:.775,hasTruncateMarker:!1,authors:[{name:"Vangipuram Srinivasa Sarath Chandra",title:"Tech enthusiast",url:"https://github.com/Sarath191181208",image_url:"https://avatars.githubusercontent.com/u/74459981?v=4",imageURL:"https://avatars.githubusercontent.com/u/74459981?v=4"}],frontMatter:{authors:{name:"Vangipuram Srinivasa Sarath Chandra",title:"Tech enthusiast",url:"https://github.com/Sarath191181208",image_url:"https://avatars.githubusercontent.com/u/74459981?v=4",imageURL:"https://avatars.githubusercontent.com/u/74459981?v=4"}},prevItem:{title:"Support for of SBB ins",permalink:"/emu_8086/blog/2023/11/3/"},nextItem:{title:"Support for memory, reg addressing for 2 operand instructions",permalink:"/emu_8086/blog/2023/11/1/"}},m={authorsImageUrls:[void 0]},p=[{value:"Execution of <code>OR</code> instructions",id:"execution-of-or-instructions",level:2},{value:"Compilation of <code>XOR</code> ins",id:"compilation-of-xor-ins",level:2},{value:"Execution of the <code>xor</code> instruction",id:"execution-of-the-xor-instruction",level:2}],d={toc:p},l="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"execution-of-or-instructions"},"Execution of ",(0,a.kt)("inlineCode",{parentName:"h2"},"OR")," instructions"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"OR")," instruction performs a bitwise OR operation on the value in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"rs2")," and stores the result in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1"),". The syntax is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asm6502",metastring:"showLineNumbers",showLineNumbers:!0},"OR AX, BX\n")),(0,a.kt)("h2",{id:"compilation-of-xor-ins"},"Compilation of ",(0,a.kt)("inlineCode",{parentName:"h2"},"XOR")," ins"),(0,a.kt)("p",null,"It is used to perform bitwise XOR operation on the value in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"rs2")," and stores the result in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1"),". The syntax is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asm6502",metastring:"showLineNumbers",showLineNumbers:!0},"XOR AX, BX\n")),(0,a.kt)(r.YH,{instructionName:"XOR",reg_16bit_and_anything_ins:51,reg_8bit_and_anything_ins:50,indexed_addressing_and_anyting_ins:49,addr_and_8bit_reg:48,al_and_num_ins:52,ax_and_num_ins:53,reg16bit_and_16bit_num:129,reg16bit_and_8bit_num:131,reg8bit_and_num:128,reg_num_sub_ins:240,addr16bit_and_16bit_num:129,addr16bit_and_8bit_num:131,addr8bit_and_num:128,addr_num_sub_ins:54,mdxType:"GenerateCompilationTable"}),(0,a.kt)("h2",{id:"execution-of-the-xor-instruction"},"Execution of the ",(0,a.kt)("inlineCode",{parentName:"h2"},"xor")," instruction"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"xor")," instruction performs a bitwise XOR operation on the value in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"rs2")," and stores the result in register ",(0,a.kt)("inlineCode",{parentName:"p"},"rs1"),". The syntax is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asm6502",metastring:"showLineNumbers",showLineNumbers:!0},"xor AX, BX\n")),(0,a.kt)("p",null,"Algorithm:\nop1 <- op1 XOR op2"))}h.isMDXComponent=!0}}]);